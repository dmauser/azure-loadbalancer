#Parameters
rg=lab-lb-migrate #Define your resource group
location=(az group show -n $rg --query location -o tsv)#Set location

#Define parameters for Azure Hub and Spokes:
AzurehubName=az-hub #Azure Hub Name
AzurehubNamesubnetName=subnet1 #Azure Hub Subnet name where VM will be provisioned
Azurehubsubnet1Prefix=10.0.0.0/27 #Azure Hub Subnet address prefix
Azurespoke1Name=az-spk1 #Azure Spoke 1 name
Azurespoke2Name=az-spk2 #Azure Spoke 1 name
#Variables
nva1ip=$(az network nic show -g $rg --name $AzurehubName-lxnva1-nic --query "ipConfigurations[].privateIpAddress" -o tsv)
nva2ip=$(az network nic show -g $rg --name $AzurehubName-lxnva2-nic  --query "ipConfigurations[].privateIpAddress" -o tsv)
# Frontendip1 (non-zonal)
nvalbip1=$(az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[0].privateIpAddress" -o tsv)
# Frontendip2 (zonal)
nvalbip2=$(az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[1].privateIpAddress" -o tsv)


# 1) Connectivity tests before UDR change:

# Review the Linux NVAs have IPTables enforced
# Via Bastion or Serial console run:
sudo iptables -L -v -n --line-numbers

#Example/Expected output for FORWARD rules:
# {Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
#num   pkts bytes target     prot opt in     out     source               destination         
#1      157  8680 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
#2       60  2480 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
#3        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:443
#4        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:53
#5        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22
#6        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5201
#7        1    84 ACCEPT     icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 8
#8        0     0 ACCEPT     icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 0
#9        0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0  

# Access Bastion or Serial console on az-SPK1-lxvm:
# Run the following
ping 10.0.2.4 -c 5
sudo hping3 10.0.2.4 -S -p 80 -c 10
curl 10.0.2.4

# Access Bastion or Serial console on az-SPK2-lxvm:
# Run the following
ping 10.0.1.4 -c 5
sudo hping3 10.0.1.4 -S -p 80 -c 10
curl 10.0.1.4

# Optional - you can run commands fron onprem-vmlx
# Optional - You can also remove NVA Linux icmp rule to ensure IPtables is being enforced
# Note: That will make ping to stop working on the following tests
sudo iptables -L -v -n --line-numbers

#Example:
# {Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
#num   pkts bytes target     prot opt in     out     source               destination         
#1      157  8680 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
#2       60  2480 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80
#3        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:443
#4        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:53
#5        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22
#6        0     0 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:5201
#7        1    84 ACCEPT     icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 8
#8        0     0 ACCEPT     icmp --  eth0   *       0.0.0.0/0            0.0.0.0/0            icmptype 0
#9        0     0 DROP       all  --  *      *       0.0.0.0/0            0.0.0.0/0  
sudo iptables -D FORWARD 7 # Run once
sudo iptables -D FORWARD 7 # Run twice
sudo iptables -L -v -n --line-numbers
# Icmp lines should be removed.
# ====> Remember to run on both NVAs.

# 2) UDR Change on Spoke 2 to point to Zonal LBFE (Spoke 1 points to non-zonal LBFE)

## Dump non-zonal and Zonal LB Frontends

echo 'Frontendip1 (non-zonal)' &&\
az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[0].privateIpAddress" -o tsv &&\
echo 'Frontendip2 (zonal)' &&\
az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[1].privateIpAddress" -o tsv

## Updating UDRs -> SPK1 default route to Frontendip1 and SPK2 VM route to Frontendip2
# RT-Spoke1-to-nvalb
az network route-table route update --resource-group $rg --name Default-to-nvalb --route-table-name RT-Spoke1-to-nvalb \
 --address-prefix 0.0.0.0/0 \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip1 \
 --output none
az network route-table route create --resource-group $rg --name Hub-to-nvalb --route-table-name RT-Spoke1-to-nvalb   \
 --address-prefix $Azurehubsubnet1Prefix \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip1 \
 --output none
# RT-Spoke2-to-nvalb  
az network route-table route update --resource-group $rg --name Default-to-nvalb --route-table-name RT-Spoke2-to-nvalb \
 --address-prefix 0.0.0.0/0 \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip2 \
 --output none
az network route-table route create --resource-group $rg --name Hub-to-nvalb --route-table-name RT-Spoke2-to-nvalb   \
 --address-prefix $Azurehubsubnet1Prefix \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip2 \
 --output none

#Check source/destination VMs effective routes
echo $Azurespoke1Name-lxvm &&\
az network nic show --resource-group $rg -n $Azurespoke1Name-lxvm-nic --query "ipConfigurations[].privateIpAddress" -o tsv &&\
az network nic show-effective-route-table --resource-group $rg -n $Azurespoke1Name-lxvm-nic -o table
echo $Azurespoke2Name-lxvm &&\
az network nic show --resource-group $rg -n $Azurespoke2Name-lxvm-nic --query "ipConfigurations[].privateIpAddress" -o tsv &&\
az network nic show-effective-route-table --resource-group $rg -n $Azurespoke2Name-lxvm-nic -o table

### Test/Actions
# (Optional)Capture Network Trace on both NVAs
sudo tcpdump -n host 10.0.1.4 and host 10.0.2.4 -w nva1test1.pcap
sudo tcpdump -n host 10.0.1.4 and host 10.0.2.4 -w nva2test1.pcap

Access Bastion or Serial console on 
# Access Bastion or Serial console on az-SPK1-lxvm:
# Run the following
ping 10.0.2.4 -c 5
sudo hping3 10.0.2.4 -S -p 80 -c 10
curl 10.0.2.4

# Access Bastion or Serial console on az-SPK2-lxvm:
# Run the following
ping 10.0.1.4 -c 5
sudo hping3 10.0.1.4 -S -p 80 -c 10
curl 10.0.1.4

# Access Bastion or Serial console on onprem-lxvm:
# Run the following against az-SPK2-lxvm that got the UDR change to the Zonal LBFE.
ping 10.0.2.4 -c 5
sudo hping3 10.0.2.4 -S -p 80 -c 10
curl 10.0.2.4

# 3) UDR Change on Spoke 1 to point to Zonal LB (Spoke 2 points to non-zonal LBFE)

## Dump non-zonal and Zonal LB Frontends

echo 'Frontendip1 (non-zonal)' &&\
az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[0].privateIpAddress" -o tsv &&\
echo 'Frontendip2 (zonal)' &&\
az network lb show -g $rg --name $AzurehubName-nvalb --query "frontendIpConfigurations[1].privateIpAddress" -o tsv

## Updating UDRs -> SPK1 default route to Frontendip1 and SPK2 VM route to Frontendip2
# RT-Spoke1-to-nvalb
az network route-table route update --resource-group $rg --name Default-to-nvalb --route-table-name RT-Spoke1-to-nvalb \
 --address-prefix 0.0.0.0/0 \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip2 \
 --output none
az network route-table route create --resource-group $rg --name Hub-to-nvalb --route-table-name RT-Spoke1-to-nvalb   \
 --address-prefix $Azurehubsubnet1Prefix \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip2 \
 --output none
# RT-Spoke2-to-nvalb  
az network route-table route update --resource-group $rg --name Default-to-nvalb --route-table-name RT-Spoke2-to-nvalb \
 --address-prefix 0.0.0.0/0 \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip1 \
 --output none
az network route-table route create --resource-group $rg --name Hub-to-nvalb --route-table-name RT-Spoke2-to-nvalb   \
 --address-prefix $Azurehubsubnet1Prefix \
 --next-hop-type VirtualAppliance \
 --next-hop-ip-address $nvalbip1 \
 --output none

#Check source/destination VMs effective routes
echo $Azurespoke1Name-lxvm &&\
az network nic show --resource-group $rg -n $Azurespoke1Name-lxvm-nic --query "ipConfigurations[].privateIpAddress" -o tsv &&\
az network nic show-effective-route-table --resource-group $rg -n $Azurespoke1Name-lxvm-nic -o table
echo $Azurespoke2Name-lxvm &&\
az network nic show --resource-group $rg -n $Azurespoke2Name-lxvm-nic --query "ipConfigurations[].privateIpAddress" -o tsv &&\
az network nic show-effective-route-table --resource-group $rg -n $Azurespoke2Name-lxvm-nic -o table

### Test/Actions
# (Optional)Capture Network Trace on both NVAs
sudo tcpdump -n host 10.0.1.4 and host 10.0.2.4 -w nva1test1.pcap
sudo tcpdump -n host 10.0.1.4 and host 10.0.2.4 -w nva2test1.pcap

Access Bastion or Serial console on 
# Access Bastion or Serial console on az-SPK1-lxvm:
# Run the following
ping 10.0.2.4 -c 5
sudo hping3 10.0.2.4 -S -p 80 -c 10
curl 10.0.2.4

# Access Bastion or Serial console on az-SPK2-lxvm:
# Run the following
ping 10.0.1.4 -c 5
sudo hping3 10.0.1.4 -S -p 80 -c 10
curl 10.0.1.4

# Access Bastion or Serial console on onprem-lxvm:
# Run the following against az-SPK2-lxvm that got the UDR change to the Zonal LBFE.
ping 10.0.2.4 -c 5
sudo hping3 10.0.2.4 -S -p 80 -c 10
curl 10.0.2.4

# Misc/Troubleshooting/Notes
# Disable UDRs ## Disable Route Tables (bypass Firewall) - It restores default behavior of the original LAB without the Firewall.
az network vnet subnet update -n subnet1 -g $rg --vnet-name $AzurehubName-vnet --route-table "" -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke1Name-vnet --route-table "" -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke2Name-vnet --route-table "" -o none
az network vnet subnet update -n GatewaySubnet -g $rg --vnet-name $AzurehubName-vnet --route-table "" -o none

# Reassociate UDRs to their respective subnets
az network vnet subnet update -n subnet1 -g $rg --vnet-name $AzurehubName-vnet --route-table RT-Hub-to-nvalb -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke1Name-vnet --route-table RT-Spoke1-to-nvalb -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke2Name-vnet --route-table RT-Spoke2-to-nvalb -o none
az network vnet subnet update -n GatewaySubnet -g $rg --vnet-name $AzurehubName-vnet --route-table RT-GWSubnet-to-nvalb -o none

### Loopback
# Configure loopback adapters
### Tests
sudo tcpdump -n host 10.0.2.4 and tcp[tcpflags]==tcp-syn
sudo tcpdump -n host 10.0.1.4 and tcp[tcpflags]==tcp-syn
sudo hping3 10.0.2.4 -S -p 80 -c 10
# 5 times
x=1; while [ $x -le 5 ]; do echo test $(( x++));netcat -v -z 10.0.2.4 80; sleep 5; done 
i=10;x=1; while [ $x -le $i ]; do echo test $(( x++));curl 10.0.2.4 --no-keepalive; sleep 5; done 
# Iperf
iperf -s # Server side 
iperf3 -c 10.0.2.4 -t 30 -P 32 # Client side
